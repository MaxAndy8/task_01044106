
#include "MenuState.h"


class Menu {
private:
    MenuState* currentState = nullptr;

public:
    Menu()  {}
    ~Menu() {
        if (currentState != nullptr) {
            delete currentState;
        }
    }

    void Run() {
        char ch;        
        currentState = new MainMenuState();
        currentState->displayMenu();

        while (currentState) {
            
            ch = _getch();
            if (ch == -32) ch = _getch();

            MenuState* nextState = currentState->handleInput(ch);
            if (nextState != currentState) {
                delete currentState;
                currentState = nextState;
            }
            currentState->displayMenu();

        }
    }
};

int main() {
	system("chcp 1251>nul");
	system("CLS");
	ConsoleCursorVisible(false, 100);

	Menu menu;
	menu.Run();

	return 0;
}


/*22 паттерни
https://refactoring.guru/uk/design-patterns
UML документація
https://docs.kde.org/trunk5/uk/umbrello/umbrello/

Реалізуй повністю завдання на c++: Магазин кави
Уявіть, що ви розробляєте систему для кавового магазину. У вас є класи для представлення продуктів (кава, чай, печиво), класи для клієнтів і
класи для обробки замовлень. Ваша мета - використати поведінкові паттерни для полегшення взаємодії між різними елементами системи.
1. Створення продуктів:
• Реалізуйте ієрархію класів для представлення продуктів (кава, чай, печиво).
• Використайте паттерн Фабричний метод для створення екземплярів продуктів.
2. Клієнти:
• Розробіть класи для представлення клієнтів. Клієнт може розміщувати замовлення та переглядати свою історію замовлень.
• Використайте паттерн Посередник для того, щоб клієнти могли слідкувати за станом своїх замовлень.
3. Замовлення:
• Розробіть клас для представлення замовлення, який включає в себе список продуктів та клієнта, який зробив замовлення.
• Використайте паттерн Команда для імплементації замовлення.
4. Знижки та промокоди:
• Реалізуйте можливість застосовувати знижки або промокоди до замовлень.
• Використайте паттерн Ланцюжок відповідальностей для обробки різних типів знижок.
5. Сплачено та відправлено:
• Додайте можливість позначати замовлення як сплачені та відправлені*/
